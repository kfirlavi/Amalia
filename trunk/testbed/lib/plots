#!/bin/bash

# load libraries
LIB_PATH="$(dirname $0)/../lib"

source $LIB_PATH/io
PLOTS_HORIZONTAL_SIZE=700
PLOTS_GOLDEN_RATIO=1.61803399
PLOTS_EPS_WHITE_BLACK_PLOT_SUFFIX=bw.eps
PLOTS_EPS_COLOR_PLOT_SUFFIX=color.eps
PLOTS_PLOT_DATAFILE_SUFFIX=data
PLOTS_DEFAULT_POINTSIZE=0.7
PLOTS_LEFT_MARGINE=10
PLOTS_RIGHT_MARGINE=10
PLOTS_UP_MARGINE=4
PLOTS_DOWN_MARGINE=4
PLOTS_GNUPLOT_SKIP_DATA_POINTS=1 # this is the default. Use all the points in the datafile

plots_generate_index_file()
{
	local dir=$1
	local html=$dir/index.html
	verbose "Generating $html"
	cat <<- EOF > $html
		<html><body>
		Click image to see its data file
		<br />
		EOF
	for i in $(cd $dir && find -name '*png' | sort -n -t t -k 9,9n)
	do
		local filename_prefix=$(echo $i| sed 's/\.png//g')
		cat <<- EOF >> $html
			<div>
			<a href='$filename_prefix.$PLOTS_PLOT_DATAFILE_SUFFIX'><img align=center src='$i' alt='$i' /></a>
			<a href='$filename_prefix.$PLOTS_EPS_WHITE_BLACK_PLOT_SUFFIX'>Black White EPS</a>
			<a href='$filename_prefix.$PLOTS_EPS_COLOR_PLOT_SUFFIX'>Color EPS</a>
			</div>
			EOF
	done
	echo "</html></body>" >> $html
}

plots_get_plot_vertical_size()
{
	echo $PLOTS_HORIZONTAL_SIZE/$PLOTS_GOLDEN_RATIO | bc
}

plots_get_plot_size()
{
	local size=$1 # double_vertical double_horizontal double or none
	local horiz=$PLOTS_HORIZONTAL_SIZE
	local vert=$(plots_get_plot_vertical_size)
	case $size in 
		double_horizontal)
			horiz=$(echo $horiz*2 | bc)
		;;
		double_vertical)
			vert=$(echo $vert*2 | bc)
		;;
		double)
			horiz=$(echo $horiz*2 | bc)
			vert=$(echo $vert*2 | bc)
		;;
	esac
	echo "$horiz,$vert"
}

plots_get_zoom_plot_size()
{
	local percentage=$1
	local horiz=$PLOTS_HORIZONTAL_SIZE
	local vert=$(plots_get_plot_vertical_size)
	echo "$(echo "$horiz*$percentage/100" | bc),$(echo "$vert*$percentage/100" | bc)"
}

plots_replot_eps()
{
	local filename_prefix=$1
	cat <<- EOF
		set term postscript eps enhanced
		set output "$filename_prefix.$PLOTS_EPS_WHITE_BLACK_PLOT_SUFFIX"
		replot

		set term postscript eps color enhanced
		set output "$filename_prefix.$PLOTS_EPS_COLOR_PLOT_SUFFIX"
		replot
		EOF
}

# will return notheing if size is not supplied
# this will make the plot use the default size
plots_pointsize_command()
{
	local size=${1:-$PLOTS_DEFAULT_POINTSIZE}
	echo "set pointsize $size"
}

plots_set_static_margins()
{
	cat <<- EOF
		set lmargin $PLOTS_LEFT_MARGINE
		set bmargin $PLOTS_DOWN_MARGINE
		set rmargin $PLOTS_RIGHT_MARGINE
		set tmargin $PLOTS_UP_MARGINE
	EOF
}

# add this function for skipping datapoints. This will reduce the size of the eps file. 
# example orginal: plot 'datafile' index 4 every 10 using 3:5
# example: plot 'datafile' index 4 $(plots_skip_points) using 3:5
plots_skip_points()
{
	local mult=$1
	local skip=$PLOTS_GNUPLOT_SKIP_DATA_POINTS
	[[ -n $mult ]] && skip=$(echo "$mult * $PLOTS_GNUPLOT_SKIP_DATA_POINTS" | bc)
	echo "every $skip"
}
