#!/bin/bash

# load libraries
LIB_PATH="$(dirname $0)/../lib"

source $LIB_PATH/remote

# Globals
MADWIFI_TIMING_DUMPFILE_DIR="/tmp"
MADWIFI_TIMING_DUMPFILE_SUFFIX=".madwifi.timing"
MADWIFI_TIMING_PACKET_SIZE=1534 # this is for filtering 
MADWIFI_TIMING_LINE_DESCRIPTOR="MADWIFI_DELAY_TIMESTAMPS" 

madwifi_start_timing_logging_on_all_clients()
{
	local pids=
	for c in $CLIENTS
	do 
		madwifi_start_timing_logging "client$c" &
		pids="$pids $!"
	done
	wait_for_pids $pids
}

madwifi_stop_timing_logging_on_all_clients()
{
	local pids=
	for c in $CLIENTS
	do 
		madwifi_stop_timing_logging "client$c" &
		pids="$pids $!"
	done
	wait_for_pids $pids
}

madwifi_move_timing_dumpfile_for_all_clients()
{
	local destdir=$1
	local pids=
	for c in $CLIENTS
	do 
		madwifi_move_timing_dumpfile "client$c" $destdir &
		pids="$pids $!"
	done
	wait_for_pids $pids
}

madwifi_start_timing_logging()
{
	local host=$1
	local dumpfile=$MADWIFI_TIMING_DUMPFILE_DIR/$host$MADWIFI_TIMING_DUMPFILE_SUFFIX
	verbose "Collecting madwifi timing data on $host"
	ssh root@$host "cat /proc/kmsg > $dumpfile" 2> /dev/null &
}

madwifi_stop_timing_logging()
{
	local host=$1
	verbose "kill madwifi timing logging on $host"
	ssh root@$host "kill \$(ps fax | grep '/proc/kmsg'  | sed 's/^ //' | cut -d ' ' -f 1)"
}

madwifi_move_timing_dumpfile()
{
	local host=$1
	local destdir=$2
	local filename=$host$MADWIFI_TIMING_DUMPFILE_SUFFIX
	local src=$MADWIFI_TIMING_DUMPFILE_DIR/$filename
	local dst=$destdir/$filename
	copy_file_from_host root $host $src $dst
	delete_file_on_host $host $src
	madwifi_clean_timing_dumpfile $dst
}

madwifi_clean_timing_dumpfile()
{
	local file=$1
	verbose "Cleaning $file from kernel messages and $MADWIFI_TIMING_LINE_DESCRIPTOR"
	# filter by $MADWIFI_TIMING_LINE_DESCRIPTOR descriptor in the start of the line
	cat $file | grep "$MADWIFI_TIMING_LINE_DESCRIPTOR" > $file
	cat $file | cut -f 2- > $file
	# filter by packet size
	cat $file | grep $MADWIFI_TIMING_PACKET_SIZE > $file
}

# this method intended to make sure that the times the packet
# was enqueued are distinct.
madwifi_check_timing_dumpfile_enqueue_time_is_distinct()
{
	local file=$1
	local n1=$(cat $file | cut -f 2 | sort -n | uniq | wc -l)
	local n2=$(cat $file | cut -f 2 | wc -l)
	ort -n | uniq |wc -l[ n1 -ne n2 ]] && verbose "Timestamps in $file are not distinct!"
}
